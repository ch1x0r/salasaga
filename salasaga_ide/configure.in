AC_INIT(flame-edit, [0.7.7-dev], [flameproject-devel@lists.sourceforge.net])

MAJOR_VERSION=0
MINOR_VERSION=7
MICRO_VERSION=7-dev

FLAME_VERSION=[${MAJOR_VERSION}.${MINOR_VERSION}.${MICRO_VERSION}]

dnl Tell configure to look in the config subdirectory
dnl for config.guess, config.sub, etc
AC_CONFIG_AUX_DIR(config)

dnl GNU recommended way to determine host variables (OS, etc)
AC_CANONICAL_HOST

AC_PROG_CC
AC_PROG_INSTALL

dnl Check if the X libraries are installed (needed for libungif on at least Solaris)
missing_x=0
AC_CHECK_LIB(X11, XGetImage, XLIB="-lX11", [missing_x=1])

dnl Check for the gif or ungif libraries
missing_gif=1
AC_CHECK_LIB(gif, PrintGifError, GIFLIB="-lgif" missing_gif=0, GIFLIB="")
dnl MinGW check for libungif
AC_CHECK_LIB(ungif, DGifOpen, GIFLIB="-lungif" missing_gif=0)
dnl Solaris needs -lX11 on the linker line for ungif to work
AC_CHECK_LIB(ungif, PrintGifError, GIFLIB="-lungif" missing_gif=0,, [-lX11])

dnl Check for the zlib library
missing_zlib=1
AC_CHECK_LIB(z, compress2, ZLIB="-lz" missing_zlib=0)

dnl Windows has the zlib library, but its named zdll instead
dnl Note the smoke-and-mirrors setting of HAVE_LIBZ if it's found. :) (should allow MinGW to work)
AC_CHECK_LIB(zdll, compress2, ZLIB="-lzdll" missing_zlib=0)
AC_CHECK_LIB(zdll, compress2, AC_DEFINE([HAVE_LIBZ]) missing_zlib=0)

dnl Check for the ming library
missing_ming=1
AC_CHECK_LIB(ming, Ming_init, MINGLIB="-lming" missing_ming=0)

dnl Let the user know about missing libraries
we_should_exit=0
if test $missing_x == 1
then
	echo
	echo "The X11 development libraries weren't found, please install them."
	echo
	we_should_exit=1
fi
if test $missing_gif == 1
then
	echo
	echo "The gif or ungif development libraries weren't found, please install them."
	echo
	we_should_exit=1
fi
if test $missing_zlib == 1
then
	echo
	echo "The zlib development libraries weren't found, please install them."
	echo
	we_should_exit=1
fi
if test $missing_ming == 1
then
	echo
	echo "The Ming (www.libming.org) development libraries weren't found, please install them."
	echo
	we_should_exit=1
fi

if test $we_should_exit == 1
then
	exit -1
fi 

dnl Check for the GTK, GLib, GConf, Gnome, xml, and png libraries
AC_CHECK_PROG(PKG_CONFIG, pkg-config, [yes])
if test x$PKG_CONFIG = xyes;
then
	GTK_CFLAGS=`pkg-config glib-2.0 gdk-2.0 gdk-pixbuf-2.0 gtk+-2.0 gconf-2.0 libgnome-2.0 libpng libxml-2.0 --cflags`
	GTK_LIBS=`pkg-config glib-2.0 gdk-2.0 gdk-pixbuf-2.0 gtk+-2.0 gconf-2.0 libgnome-2.0 libpng libxml-2.0 --libs`
fi

case "${host_os}" in
	*darwin*)
		SHLIBLDFLAGS="-dynamiclib \
			-compatibility_version \
			\`expr 1 + \"\$(MAJOR_VERSION)\"\`.\$(MINOR_VERSION) \
			-current_version \
			\`expr 1 + \"\$(MAJOR_VERSION)\"\`.\$(MINOR_VERSION) \
			-install_name \$(libdir)/\$(SHAREDLIB)"
		SHLIBEXT=".dylib"
		CFLAGS="$CFLAGS -fno-common"
		;;
	*linux*)
		SHLIBLDFLAGS="-shared -Wl"
		SHLIBEXT=".so"
		SHCFLAGS="-fPIC"
		;;
	*solaris*)
 		SHLIBLDFLAGS="-shared -Wl"
		SHLIBEXT=".so"
 		SHCFLAGS="-fPIC"
		;;
	mingw*)
		LDFLAGS="-mwindows"
		SHLIBEXT=".dll"
		SHLIBLDFLAGS="-shared -Wl"
		;;
	*)
		SHLIBLDFLAGS="-shared"
		SHLIBEXT=".so"
esac

AC_SUBST(GTK_CFLAGS)
AC_SUBST(GTK_LIBS)
AC_SUBST(LDFLAGS)
AC_SUBST(SHLIBEXT)
AC_SUBST(SHLIBLDFLAGS)
AC_SUBST(SHCFLAGS)
AC_SUBST(GIFLIB)
AC_SUBST(XLIB)
AC_SUBST(ZLIB)
AC_SUBST(MINGLIB)
AC_SUBST(MAJOR_VERSION)
AC_SUBST(MINOR_VERSION)
AC_SUBST(MICRO_VERSION)
AC_SUBST(FLAME_VERSION)

AC_CONFIG_FILES(Makefile.config)

AC_OUTPUT()
